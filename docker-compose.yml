services:
  kafka:
    image: apache/kafka:3.9.1
    container_name: kafka
    environment:
      # KRaft single-node config
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Listeners
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # Convenience
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    volumes:
      - kafka_data:/var/lib/kafka/data

  # one-shot container to create starter topics
  init-topics:
    image: apache/kafka:3.9.1
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092
      --create --if-not-exists --topic tick.v1 --partitions 3 --replication-factor 1 &&
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092
      --create --if-not-exists --topic candle.v1 --partitions 3 --replication-factor 1 &&

      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092
      --create --if-not-exists --topic tick.desired.v1 --partitions 6 --replication-factor 1 &&
      /opt/kafka/bin/kafka-configs.sh --bootstrap-server kafka:9092
      --alter --topic tick.desired.v1 --add-config cleanup.policy=compact &&

      echo 'âœ… tick.v1, candle.v1, tick.desired.v1 (compacted) ready'
      "

    restart: "no"

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8080:8080"


  tick-publisher:
    build:
      context: .
      dockerfile: services/tick-publisher/Dockerfile
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - APP_DESIRE_TOPIC=tick.desired.v1
      - APP_TICK_TOPIC=tick.v1
      - APP_TTL_SECONDS=30
      - APP_PERIOD_MS=200
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  kafka_data:
